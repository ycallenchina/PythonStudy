# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '回测.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import urllib.request
import os
import sys
import time
from bs4 import BeautifulSoup
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QDate
from PyQt5.QtWidgets import QMessageBox,QFileDialog
import time

def time_out(late=100):#随机时间函数100等于1秒
    import time
    import random
    rand=random.randint(1,late)/100
    time.sleep(rand)
    print('延时',rand,'秒...')
    return rand

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(973, 749)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(20, 20, 471, 191))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(519, 19, 431, 191))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(20, 230, 721, 451))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        # self.textBrowser = QtWidgets.QTextBrowser(self.frame_3)
        # self.textBrowser.setGeometry(QtCore.QRect(10, 10, 711, 431))
        # self.textBrowser.setObjectName("textBrowser")
       
        # 对QTableWidget表格进行设置       
        self.tableWidget = QtWidgets.QTableWidget(self.frame_3)
        self.tableWidget.setGeometry(QtCore.QRect(8, 5, 600, 600))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)

        self.tableWidget.setColumnWidth(0, 50)# 设置第一列宽度
        self.tableWidget.setColumnWidth(1, 50)# 设置第2列宽度
        self.tableWidget.setColumnWidth(2, 50)# 设置第3列宽度

        # self.tableWidget.horizontalHeader().setStretchLastSection(True) # 设置自动填充容器
        self.tableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)  # 垂直滚动条
        #next
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(420, 0, 71, 31))
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 210, 101, 31))
        self.label_3.setObjectName("label_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(880, 10, 61, 21))
        self.label_2.setObjectName("label_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 973, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "标的选择"))
        self.label_3.setText(_translate("MainWindow", "监测窗口"))
        self.label_2.setText(_translate("MainWindow", "标的策略"))

        item = self.tableWidget.horizontalHeaderItem(0)# 获取表格的第一列
        item.setText(_translate("MainWindow", "期数"))# 设置表格第一列的标题
        item = self.tableWidget.horizontalHeaderItem(1)# 获取表格的第二列
        item.setText(_translate("MainWindow", "名称"))# 设置表格第二列的标题
        item = self.tableWidget.horizontalHeaderItem(2)# 获取表格的第二列
        item.setText(_translate("MainWindow", "名称2"))# 设置表格第二列的标题
        item = self.tableWidget.horizontalHeaderItem(3)# 获取表格的第二列
        item.setText(_translate("MainWindow", "名称2"))# 设置表格第二列的标题
        item = self.tableWidget.horizontalHeaderItem(4)# 获取表格的第二列
        item.setText(_translate("MainWindow", "名称2"))# 设置表格第二列的标题
        item = self.tableWidget.horizontalHeaderItem(5)# 获取表格的第二列
        item.setText(_translate("MainWindow", "名称2"))# 设置表格第二列的标题
    def bindTable(self):
        # help(MainWindow)
        for i in range(0, len(range(5))):# 遍历文件列表
            self.tableWidget.insertRow(0)# 添加新行
            # 设置第一列的值为期数
            self.tableWidget.setItem(0, 0, QtWidgets.QTableWidgetItem(str(i)))#参数一:添加新行的位置,参数2为列的位置,参数3为内容
            # 设置第二列的值为文件名
            self.tableWidget.setItem(0, 1, QtWidgets.QTableWidgetItem('hello'))
            self.tableWidget.repaint()#表格刷新
            time.sleep(1)
            print('load...')

if __name__ == '__main__':
    #使用说明:

    #此程序以显示 getFiles 里的list 为主
    #按确定显示在bindTable(表格方式) 和 bindList里(ico图片方式) 
    #通过self.lineEdit_2.text() 可调用抓取期数文本框内容
    #通过self.lineEdit.text() 可调用保存路径文本框内容
    #msg 方法:用来设置打开保存窗口的
    #tableClick 和 itemClick用来设置 显示的list 内容是否可以单击后执行命令


    app = QtWidgets.QApplication(sys.argv)# sys.argv 可以通过外部调用时,把参数传到此函数里.
    #如,调用此<实例_浏览l..>时,可追加输入参数 那么sys.argv就会储存这些参数,然后传进函数
    MainWindow = QtWidgets.QMainWindow() # 创建窗体对象
    ui = Ui_MainWindow() # 创建PyQt设计的窗体对象
    ui.setupUi(MainWindow) # 调用PyQt窗体的方法对窗体对象进行初始化设置
    MainWindow.show() # 显示窗体
    ui.bindTable()
    sys.exit(app.exec_()) # 程序关闭时退出进程