1___03算术符号.py

2        #算术符号优先级:乘方>正负号>乘除>加减

3        #运算符号,都是半角.

4        #注意除法

5        # with open()

6        print(f'第{i}行结果:',8//3)#整除,就是舍去小数的意思

7        print(f'第{i+1}行结果:',-7//2)#注意负数的整除,取最小值

8___0Excel知识点.py

9        #excel的竖向导入

10            #竖向写入

11            # 写入新的文件地址

12___0sublime快捷键.py

13        # '''sublime 快捷键

14        # 1.操作

15        # ctrl+`:打开Sublime Text 控制台（Esc退出）

16        # Ctrl+Shift+P : 打开命令面板（Esc退出）

17        # Ctrl + K, Ctrl + B： 组合键，显示或隐藏侧栏

18        # Alt ：光标调到菜单栏，↑↓←→ 移动光标

19        # 2.编辑

20        # Ctr+Shift+D：复制粘贴光标所在行

21        # Alt+.：关闭标签

22        # Ctrl+/：用//注释当前行。

23        # Ctrl+Shift+/：用/**/注释。

24        # Ctrl + Enter： 在当前行下面新增一行然后跳至该行

25        # Ctrl + Shift + Enter： 在当前行上面增加一行并跳至该行

26        # Ctrl + ←/→： 进行逐词移动，

27        # Ctrl + Shift + ←/→： 进行逐词选择

28        # Ctrl + Shift + ↑/↓： 移动当前行（文件会被修改）

29        # Ctrl+KK ：从光标处删除至行尾

30        # Ctrl+K Backspace ：从光标处删除至行首

31        # Ctrl+Z：撤销

32        # Ctrl+Y：恢复撤销

33        # Ctrl+J：合并行（已选择需要合并的多行时）

34        # Ctrl + [： 选中内容向左缩进

35        # Ctrl + ]： 选中内容向右缩进

36        # 3.选择

37        # Alt+F3：选中关键词后，选中所有相同的词。可以配合Ctrl+D使用。

38        # Ctrl + D Ctrl + K Ctrl + U：Ctrl + D选择当前光标所在的词并* * 高亮该词所有出现的位置，再次Ctrl + D，会选择该词出现的下一个位置。在多重选词的过程中，Ctrl + K会将当前选中的词进行跳过在多重选词的过程中，Ctrl + U进行回退

39        # Ctrl+L ：选择光标所在整行

40        # Ctrl+X：删除光标所在行

41        # Ctrl + J： 把当前选中区域合并为一行

42        # Ctrl+Shift+M：选中当前括号内容，重复可选着括号本身

43        # 4.查找

44        # （如果有窗口弹出都是Esc退出弹出窗口）

45        # Ctr+p：输入@显示容器（css或者js里面）

46        # Ctrl + F： 调出搜索框

47        # Ctrl + H： 调出替换框进行替换

48        # Ctrl + Shift + H： 输入替换内容后，替换当前关键字

49        # Ctrl + Alt + Enter： 输入替换内容后，替换所有匹配关键字。(NOTE: 注意此时如果鼠标焦点在编辑窗口中，则替换失败，将鼠标焦点调到替换框中，Ctrl + Alt + Enter才会起作用)

50        # Ctrl + Shift + F： 开启多文件搜索&替换

51        # Alt + C： 切换大小写敏感（Case-sensitive）模式

52        # Alt + W： 切换整字匹配（Whole matching）模式

53        # Alt + R： 切换正则匹配模式的开启/关闭

54        # 5.跳转

55        # Ctrl + P：列出当前打开的文件（或者是当前文件夹的文件），输入文件名然后 Enter 跳转至该文件，输入@symbol跳转到symbol符号所在的位置，输入#keyword跳转到keyword所在的位置，输入:n跳转到文件的第n行

56        # Ctrl + R：列出当前文件中的符号（例如类名和函数名，但无法深入到变量名），输入符号名称 Enter 即可以跳转到该处。

57        # 会列出Markdown文件的大纲

58        # F12： 快速跳转到当前光标所在符号的定义处（Jump to Definition）。比如当前光标所在为一个函数调用，F12会跳转至该函数的定义处。

59        # Ctrl + G： 输入行号以跳转到指定行

60        # Ctrl+M：跳转到括号另一半。

61        # 6.窗口和Tab页

62        # Ctrl + N： 在当前窗口创建一个新标签

63        # Ctrl + Shift + N： 创建一个新窗口（该快捷键 和搜狗输入法快捷键冲突）

64        # Ctrl + W： 关闭标签页，如果没有标签页了，则关闭该窗口

65        # Ctrl+Shift+W：关闭所有打开文件

66        # Ctrl + Shift + T： 恢复刚刚关闭的标签。

67        # Ctrl +Tag：移动标签。

68        # 7.屏幕

69        # F11： 切换普通全屏

70        # Shift + F11： 切换无干扰全屏

71        # Alt + Shift + 2： 进行左右分屏

72        # Alt + Shift + 8进行上下分屏

73        # Alt + Shift + 5进行上下左右分屏（即分为四屏）

74        # Ctrl + 数字键： 跳转到指定屏

75        # Ctrl + Shift + 数字键： 将当前屏移动到指定屏'''

76___0with语句.py

77        # 加载mysql

78        # 填写股票名,和时间

79        #多用于open 文件语句

80        #作用等同于 cursor = connection.cursor()并在执行完以下语句后再执行cursor.close()

81        #cursor是光标,好比载体,connection是连接路.关闭连接路更加稳健.

82___0打开文件代码.py

83___0改路径名.py

84        # 获取本文件名方法

85        # 创建的新文件名

86        # 切掉本文件名加上新文件名

87___0文章限100字每行整理.py

88        # 打开文件,写入文件

89                     # 每行多于100字就换行,循环

90___0正则表达式.py

91        # 正则基本方法:re.search

92        # 正则生成字典方法

93        # 正则span用法:显示搜索得到的起始位,和末尾位

94        print(re.search('www', 'www.runoob.com').span())  # 在起始位置匹配

95        # 正则返回搜索内容:group()和groups()用法

96___0笔记小标记.py

97___0第三方模块库.py

98        #1  sympy 模块 可解微积分 概率 几何等

99___0递归.py

100        #函数递归

101        # 函数中调用自身,称作递归

102        # 大而化小,分而治之

103        # 递归函数必须有结束条件,不能无线递归

104        # 累加器

105        #常规斐波那契数列

106        #递归算法的斐波那契下标数

107        #20米,每次可走1米或2米,计算出走完所以的方法

108        #汉诺塔

109        #三根柱子,移动圆盘,每次一个,大的圆盘在小的下面,全部移到能一个柱子

110        #递归扁平 多维列表

111___10break和continue和time语句.py

112        # 随机数的用法

113        #break: 跳出整个当前循环

114        # 多用于情况的终止用途

115        # continue:跳出本次当前循环

116        # 多用于整体里面的特殊情况，例如：搜检字符里面对i‘m的’不做处理

117        for letter in 'Python':     # 第一个实例

118___12for循环.py

119        # for循环改不了列表元素，while循环可以修改列表里面元素

120        # range函数使用，指定次数循环,还可以按照步长使用

121        # in和not in还可以用于判断是否包含某元素.

122___14字符串.py

123        # 字符串与列表相似的属性和方法

124        # 字符串与列表的不同

125        # 字符串不能直接赋值修改，不过可以用切片方法修改

126        # replace方法--修改文本里的所有重复字符

127        # count:统计出现次数

128        # strip() 去空格，准确用法：去掉字符串里头尾的，strip里参数

129        j1=j.strip()#默认是去掉两头空格

130        # s=[str(i) for i in s] 列表生成器新写法

131        # s=''.join(s) 列表变字符串方法

132        # y.split('j')  字符串变列表

133        # s.find(4)

134        # s.find('4')   找位置

135        # s.find('0')

136        # s.find(4,11)

137        # s.find('4',11)

138        # s.count()     出现次数

139        # len(s)

140        # s.rfind('4')

141        # y='      54654654    '

142        # y

143        # y.lstrip()

144        # y='SkjkljlkLKJLlkdkfd'

145        # y.lower()     变小写

146        # y.upper()

147        # y.swapcase()

148        # y.title()

149        # y.capitalize()首字母大写

150___15.2英语词汇表.py

151        # 生成词汇列表

152            # 置换标点,统一小写

153            # 生成列表use空格

154            # 汇总

155        # 去重复-集合特性法,排序

156        # 写入新txt,用jion方法转化为字符串.

157___15词频项目.py

158        # readlines方法有最大限额,所以截断了西游记1/3成西游记2来用.

159___16.4字典生成法.py

160        # 去\n方法:先转换为字符串,再用\n做分隔符转回列表--k

161        #创建字典,初始化值为0

162        # 用打包方法zip： 双循环，双列表生成字典

163___16_2统计文章里名字.py

164        # 用105文本输入，方便的建立一个需要统计字符的字典dic

165        # 读取文本为列表,但是列表的字符串里含有\n换行符号

166        # 去换行符\n方法,先转换为字符串,再用\n做分隔符转回列表--k

167        #新建字典方法fromkeys

168        # 

169        # 测试:print('宝钗你还好么,我的宝钗'.count('宝钗'))

170            	# 统计字典的每个key里的value.

171        # 给字典的值排序,生成元组,默认为升序，reverse = True变为倒序排列

172        # for y in dic:

173        #     print(y,'出现了',dic[y],'次')

174        #

175___16随机出题.py

176        # print(x[0]['题目'])
177___17.1搜索系统.py

178        # 简易搜索---把文件里包括？的内容那一行显示出来。

179        # 输入内容neiro

180        # 打开要搜索的文本

181                #消除换行符

182                # x = ''.join(i)

183                # k = x.split('\n')

184                # x=''.join(k)

185                # print(x)

186___17归类整理.py

187        # 把目录下.py的所有文件，按照目录和带有#号的内容，整理到一个txt的文件里。

188        # import re(备用正则表达式资料)

189        # s=re.findall(r"\d+\.?\d*",str(mulu_py))

190        # 得到后缀py的目录mulu_py

191        # 生成新记事本‘整理’txt记录

192        # 依次打开目录提取内容,k计数行

193        k=0#k是序列用

194            # 先写入目录名,并打开此目录

195            #提取lines内容,带有#的注释内容,并写入w

196                if '#' in i:

197___18_1统计文章词频函数.py

198        #先给需要分析的文本全路径，以及需要统计词的列表。返回字典。

199___18_2英语词汇表函数.py

200        # 在'e:\pyNote\调用资料/'路径下,给字符串adr1（分析文件的名字） ，adr2（新文件名）。这是执行函数，没有返回值。

201            #得到的是一个没有重复的单词列表

202            # 生成词汇列表

203                # 置换标点,统一小写

204                # 生成列表use空格

205                # 汇总

206            # 去重复-集合特性法,排序

207            # 写入新txt,用jion方法转化为字符串.

208___18_3append和extend的区别.py

209        #

210        # import jieba

211        #

212        # f=open('e:\pyNote\调用资料/english.txt','r',encoding='utf-8')

213        # all=[]

214        # # 用append拆分字符串实验append和exend

215        # q=[]

216        # i='im a teach,but i am not happy'

217        # q.append(i[0:5])

218        # q.append(i[5:-1]+i[-1])

219        # print(i[5:])

220        # 生成词汇列表,用extend方法:函数用于在列表末尾一次性追加另一个序列中的多个值(append区别在于append(obj)用于对象)

221        # append和extend区别结果举例:print(a+b)a,b=[],append结果[['ee', '2323']],extend结果['ee', '2323']

222        # # append和extend区别结果举例2:print(a+b)a,b='字符串',append结果['ee2323'],extend结果['e', 'e', '2', '3', '2', '3'],效果等同拆分字符

223        # for i in f.readlines():

224        #     all.extend(jieba.lcut(i))

225        # # 去重复-集合特性法,排序

226        # all=list(set(all))

227        # all.sort()

228        # # 写入新txt,用jion方法转化为字符串.

229        # f2=open('e:\pyNote\调用资料/entry.txt','w',encoding='utf-8')

230        # f2.write('\n'.join(all))

231        # f2.close()

232___18生成字典函数.py

233        # 先给两个等长的列表，或者序列，生成字典

234___19excel记录词频分析.py

235        #打开f路径的文件，用jieba分词生成k列表，再去重复的词语生成n k列表，再k列表里统计n k的每个词出现次数。

236        # 用双循环生成字典并排序，排序后会生成一个list1列表。由元组对组成。

237        # 最后写入excel

238        # 生成词汇列表

239            # 用jieba来分词

240        # 去列表重复，得到一个没有重复的词语表

241        # 做内容统计：提取n_k里每个词，再重复的原表k里出现的次数。

242        # 因为n k 和 n k1有顺序的，所以可以用双循环来生成字典,再按倒序排列

243        # print(list1)

244        # 建立新excel并写入

245___19jieba文章词频分析.py

246        #打开f路径的文件，用jieba分词生成k列表，再去重复的词语生成n k列表，再k列表里统计n k的每个词出现次数。

247        # 用双循环生成字典并排序，排序后会生成一个list1列表。由元组对组成。

248        # 最后写入txt文本

249        # 生成词汇列表

250            # 用jieba来分词

251        # 去重复

252        # 统计

253        # 双循环生成字典。

254        # 写回进去新文本里

255            # f2.write('\n')

256            # for a in i:

257            #     f2.write(str(a))

258___19给字典值排序.py

259        # 给字典按照值排序,生成新的字典,reverse默认为False,为True时倒序排列

260___22搜索系统_窗体版.py

261        #窗体fk控件实践

262            # 文本清除:抬头位置'1.0'---1表示行,0表示列,end表示已有内容的后面

263            # ent表示输入行内容,get是获得他的内容函数

264            # 读取整理txt

265                    t1.insert('end',i)#t1表示文本框,end表示已有内容的后面

266            # 本代码等同 17归类整理.py 因为import 引用不能用中文,固然起名

267            # import re(备用正则表达式资料)

268            # s=re.findall(r"\d+\.?\d*",str(mulu_py))

269            # 得到后缀py的目录mulu_py

270            # 生成新记事本‘整理’txt记录

271            # 依次打开目录提取内容,k计数行

272            k=0#k是序列用

273                # 先写入目录名,并打开此目录

274                #提取lines内容,带有#的注释内容,并写入w

275                    if '#' in i:

276        # 主控件fk

277        # 输入框

278        # 文本框

279        # 按钮1

280        # 按钮2

281        # 按钮3

282        # 需要显示的控件

283        # 主控fk死循环显示

284___22窗体控件.py

285        # 窗体控件学习

286        # 单行文本

287        # ent=Entry(fm)

288        # ent.pack()

289        # 文本框

290        # 按钮

291        # 显示,及循序

292___27_matplotlib画图.py

293        #让maplotlib图形里可以显示中文

294        #纵横坐标上下限方法-

295        #plt.xlim(0,10)# plt.ylim(0,110)

296        #plt.axis([0,5,0,200])

297        # 网格，表格标题

298        #添加坐标轴名称

299        #plt.xlable

300        #plt.ylable('战斗力')

301        # 开始画图:scatter散点图，plot折线图，bar柱形图（width柱形宽），pie饼图

302        plt.scatter(姓名,战斗力,s=size,marker='*',c='r')#s 形状大小,marker 显示的形状样式,c 形状的颜色 可以用列表指明每个 的颜色

303        # ！！！savefig必须show前面执行，不然会空白

304        # plt.savefig('E:/pyNote/测试图3.png')#保存图片

305        #显示画图

306___2浮点数精确度.py

307        # Decimal精度高，性能低

308        # round方便、不能解决精度问题

309        # format设置输出格式

310        #inf表示无穷大,nan表示不是数字

311___36自定义排序列表.py

312        #读文本,产以为列表b

313        #生成字典

314        #生成2维列表c

315        #排序方法:

316        #给2维列表从排序

317___37随机人名.py

318___38列表生成式和可迭代对象.py

319        # 列表生成器-双循环

320        # 列表生成器-判断语句

321        # pyplot.plot(a,b)

322        #

323        # pyplot.show()
324___39字典生成式.py

325        #字典生成式

326        #zip生成字典

327        #字典生成式 -带判断语句

328___3字典.py

329        #导入列表

330        #生成字典

331        #修改字典print()

332___40字典历遍的方法.py

333        #建立 初始列表b

334        #统计出现次数,各个次数出现多少次

335        #求字典最大值

336        #把字典转换为二维列表

337        #调换键值的方法

338        #解包

339___41集合.py

340        #差集,交集,并集

341        #统计工具模块

342        #串串模块,二维列表变一维的方法

343        # H=list(itertools.chain(*G))

344___43Numpy和Pandas.py

345        b=np.array(a)#列表转换为nd array对象

346        b=b.reshape(2,6)#转换为2行,6列

347        c=b.tolist()#转回列表

348        d=b.T#行列对换

349        # a.append([1,[1,2]])

350        e.ravel()#降维,从二维降到一维

351        g=pd.read_excel('E:/pyNote/调用资料/43class.xlsx','Sheet1')#读取excel表格

352        k=g.iloc[4:,3:]#提取[行,列]数据dataframe对象里面4行到最后,及3列到最后的内容

353        y=k+f#矩阵加法运算

354        y.T.to_excel('E:/pyNote/调用资料/43classNew.xlsx','Sheet1')#保存为excel,但是会覆盖整个excel表,建议新建.

355___44网爬图片.py

356___4列表.py

357        #列表资料网站 https://www.runoob.com/python3/python3-list.html

358        #列表--函数

359        # q.reverse()更改原列表，倒序序排列

360        # q.sort()更改原列表，正序排列

361        # 列表--切片器

362        # 列表--切片器（左封闭，右开的规则，举例1：切片为取第二个，3，4，第五个不取）

363        # 切片器，也有步长使用方法举例：x[1:4：2]步长2取值

364        # 切片器，反向切片方法x[8:3:-2]反向取步长2值

365        # 列表的运算

366        # while 1==1:

367        #     i=ran.randint(0,len(x)-1)

368        #     print('x元素:',i)

369        #     # 字典不能被input函数使用，input里面必须是str

370        #     s=input(x[i]+' is whose name:')

371        # 列表对象的方法：append(增加元素),count(统计元素）

372        # index（元素出现第一次的位置）insert(插入位置，元素）

373        # pop（删除下表i元素）且返回删除的元素。，remove(删除第一个i元素）

374        # reverse （顺序倒序排），sort（默认从小到大排序）
375___59class类的构造方法.py

376        #实例:小马赛跑

377            #属性,可用默认值,例如:s=2

378                self.loc+=round(self.speed*random.random())#random的方法,返回0-1的随机浮点数

379            time.sleep(1)#time的延迟方法,单位秒.

380___60设置类的私有属性.py

381        #实例:小马赛跑

382            #属性,可用默认值,例如:s=2

383                self.__loc=0#设置私有变量loc,作用是外部引用访问不到,只能内部访问

384                self.__loc+=round(self.speed*random.random())#random的方法,返回0-1的随机浮点数

385            def get_loc(self):#可以访问私有属性的方法getter

386            def set_loc(self,x):#可以设置私有属性的方法setter

387            #补充:还可以使用annotaion @标注 来访问和设置私有属性

388        print('第一次用真名,查看ma1_loc=',ma_1._Game__loc)#实际的私有属性名

389        #run测试

390        # while 1:

391        #     ma_1.run()

392        #     ma_2.run()

393        #     print('----------------------------------------')

394        #     time.sleep(1)#time的延迟方法,单位秒.

395___7if语句及逻辑判断.py

396        #elif 按照从下到上的包含关系，不然>1的情况放上面就会永远不会执行下面>5的情况。

397        # 多分支判断结构

398        #逻辑判断的顺序：not》》and》》or，所以避免循序的错误最好用（）表面你的逻辑关系。

399___try.py

400        # a=['a','v','v']

401        # print(a)

402        # print(type(a))

403___try2.py

404        # //设置行名

405        # //设置数据

406        # //设置柱状图的主标题与副标题

407        # //添加柱状图的数据及配置项

408        # //生成本地文件（默认为.html文件）

409___try3.py

410            # 文本清除:抬头位置'1.0'---1表示行,0表示列,end表示已有内容的后面

411            # ent表示输入行内容,get是获得他的内容函数

412            # 读取整理txt

413                    t1.insert('end', i)  # t1表示文本框,end表示已有内容的后面

414        # 主控件fk

415        # 输入框

416        # 文本框

417        # 按钮1

418        b1 = Button(fm, text='搜索', command=lambda: get(所有内容))  # 用lanbda 传参,不然commad=get会传参出错

419        # 需要显示的控件

420        # 主控fk死循环显示

